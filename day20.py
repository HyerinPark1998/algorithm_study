# https://www.acmicpc.net/problem/2566
# 최댓값
# 문제
# <그림 1>과 같이 9×9 격자판에 쓰여진 81개의 자연수 또는 0이 주어질 때, 이들 중 최댓값을 찾고 그 최댓값이 몇 행 몇 열에 위치한 수인지 구하는 프로그램을 작성하시오.
# 예를 들어, 다음과 같이 81개의 수가 주어지면 이들 중 최댓값은 90이고, 이 값은 5행 7열에 위치한다.
# 입력
# 첫째 줄부터 아홉 번째 줄까지 한 줄에 아홉 개씩 수가 주어진다. 주어지는 수는 100보다 작은 자연수 또는 0이다.
# 출력
# 첫째 줄에 최댓값을 출력하고, 둘째 줄에 최댓값이 위치한 행 번호와 열 번호를 빈칸을 사이에 두고 차례로 출력한다. 최댓값이 두 개 이상인 경우 그 중 한 곳의 위치를 출력한다.

# 출력해야 하는 값은 최댓값과 그 값의 행과 열 번호이다.
# 행마다 돌면서 최댓값과 행과 열을 기록하면 되지 않을까?

# 이 리스트에 최댓값과 행과 열을 기록하자
max_num = [0, 0, 0]  # 최댓값 , 행, 열

for x in range(1, 10):
    x_list = list(map(int, input().split()))
    for i, n in enumerate(x_list):
        if max_num[0] < n:
            max_num[0] = n
            max_num[1] = x
            # 인덱스 값이 0부터 시작하므로 1을 더해주자
            max_num[2] = i+1

print(max_num[0])
print(max_num[1], max_num[2])

# 틀렸다고 한다... 뭐가 틀린거지? 예상 답안이 잘 나오는데 뭐지? 뭐가 문제지? 어디가 잘못된거지?
# 다 0일 때도 있으니까 흠 max_num 리스트를 변경해야겠다.
# max_num 값을 0,0,0이 아닌 0,1,1로 인덱스 값을 주어 모든 숫자가 0이어도 값이 나오게 하였다.
max_num = [0, 1, 1]  # 최댓값 , 행, 열

for x in range(1, 10):
    x_list = list(map(int, input().split()))
    for i, n in enumerate(x_list):
        if max_num[0] < n:
            max_num[0] = n
            max_num[1] = x
            # 인덱스 값이 0부터 시작하므로 1을 더해주자
            max_num[2] = i+1

print(max_num[0])
print(max_num[1], max_num[2])

# 그렇네 이렇게 변경하니 통과하였다.


# ----------------------------------
# https://www.acmicpc.net/problem/10798
# 세로읽기
# 문제
# 아직 글을 모르는 영석이가 벽에 걸린 칠판에 자석이 붙어있는 글자들을 붙이는 장난감을 가지고 놀고 있다.
# 이 장난감에 있는 글자들은 영어 대문자 ‘A’부터 ‘Z’, 영어 소문자 ‘a’부터 ‘z’, 숫자 ‘0’부터 ‘9’이다.
# 영석이는 칠판에 글자들을 수평으로 일렬로 붙여서 단어를 만든다. 다시 그 아래쪽에 글자들을 붙여서 또 다른 단어를 만든다.
# 이런 식으로 다섯 개의 단어를 만든다. 아래 그림 1은 영석이가 칠판에 붙여 만든 단어들의 예이다.
# 한 줄의 단어는 글자들을 빈칸 없이 연속으로 나열해서 최대 15개의 글자들로 이루어진다. 또한 만들어진 다섯 개의 단어들의 글자 개수는 서로 다를 수 있다.
# 심심해진 영석이는 칠판에 만들어진 다섯 개의 단어를 세로로 읽으려 한다. 세로로 읽을 때, 각 단어의 첫 번째 글자들을 위에서 아래로 세로로 읽는다. 다음에 두 번째 글자들을 세로로 읽는다.
# 이런 식으로 왼쪽에서 오른쪽으로 한 자리씩 이동 하면서 동일한 자리의 글자들을 세로로 읽어 나간다. 위의 그림 1의 다섯 번째 자리를 보면 두 번째 줄의 다섯 번째 자리의 글자는 없다. 이런 경우처럼 세로로 읽을 때 해당 자리의 글자가 없으면, 읽지 않고 그 다음 글자를 계속 읽는다. 그림 1의 다섯 번째 자리를 세로로 읽으면 D1gk로 읽는다.
# 그림 1에서 영석이가 세로로 읽은 순서대로 글자들을 공백 없이 출력하면 다음과 같다:
# Aa0aPAf985Bz1EhCz2W3D1gkD6x
# 칠판에 붙여진 단어들이 주어질 때, 영석이가 세로로 읽은 순서대로 글자들을 출력하는 프로그램을 작성하시오.
# 입력
# 총 다섯줄의 입력이 주어진다. 각 줄에는 최소 1개, 최대 15개의 글자들이 빈칸 없이 연속으로 주어진다.
# 주어지는 글자는 영어 대문자 ‘A’부터 ‘Z’, 영어 소문자 ‘a’부터 ‘z’, 숫자 ‘0’부터 ‘9’ 중 하나이다. 각 줄의 시작과 마지막에 빈칸은 없다.
# 출력
# 영석이가 세로로 읽은 순서대로 글자들을 출력한다. 이때, 글자들을 공백 없이 연속해서 출력한다.

# 다섯개의 단어들을 밑으로 나열한 후 앞의 열부터 차례대로 읽어서 공백없이 출력해라. 단 단어들의 길이가 일정하지 않아 빈칸이 있을 때는 넘어간다.

# 단어들을 먼저 나열해보자
words = []
len_list = []
for a in range(5):
    word = input()
    words.append(word)
    len_list.append(len(word))

# 세로로 읽은 단어들이 들어갈 리스트를 만들고 그곳에 인덱스에 맞게 넣어주자. 리스트의 길이는 가장 긴 단어를 기준으로 하자
w_list = ['' for i in range(max(len_list))]

# 단어별로 넣어주기
for word in words:
    for i, w in enumerate(word):
        w_list[i] = w_list[i]+w

# 리스트를 공백없이 나열하기
print(''.join(w_list))


# ----------------------------------
# https://www.acmicpc.net/problem/2563
# 색종이
# 문제
# 가로, 세로의 크기가 각각 100인 정사각형 모양의 흰색 도화지가 있다. 이 도화지 위에 가로, 세로의 크기가 각각 10인 정사각형 모양의 검은색 색종이를 색종이의 변과 도화지의 변이 평행하도록 붙인다.
# 이러한 방식으로 색종이를 한 장 또는 여러 장 붙인 후 색종이가 붙은 검은 영역의 넓이를 구하는 프로그램을 작성하시오.
# 예를 들어 흰색 도화지 위에 세 장의 검은색 색종이를 그림과 같은 모양으로 붙였다면 검은색 영역의 넓이는 260이 된다.
# 입력
# 첫째 줄에 색종이의 수가 주어진다. 이어 둘째 줄부터 한 줄에 하나씩 색종이를 붙인 위치가 주어진다. 색종이를 붙인 위치는 두 개의 자연수로 주어지는데
# 첫 번째 자연수는 색종이의 왼쪽 변과 도화지의 왼쪽 변 사이의 거리이고, 두 번째 자연수는 색종이의 아래쪽 변과 도화지의 아래쪽 변 사이의 거리이다. 색종이의 수는 100 이하이며, 색종이가 도화지 밖으로 나가는 경우는 없다
# 출력
# 첫째 줄에 색종이가 붙은 검은 영역의 넓이를 출력한다.

# 검은 영역의 넓이를 구하려면 세장의 색종이 넓이에서 겹치는 부분의 넓이를 빼면 된다.
# 그럼 일단 구해야하는게 겹치는 부분의 넓이이다. 어떻게 구하면 좋을까?
# 겹치는 부분의 넓이도 그냥 빼는게 아니라 두장이 겹쳐진 부분이라면 한번 빼고 세장이 겹쳐진 부분이라면 두번 빼야한다.
# 색종이의 위치를 네꼭지점으로 나타내서 어떻게 할 수 없을까?
# 흠 근데 이 문제는 2차원 배열을 활용하여 색종이로 평면을 덮는 문제이다.
# 그럼 도화지를 원소가 0인 2차원 배열로 만들어서 색종이가 위치한 부분을 1로 바꿔줘서 1인 부분을 세면 되려나,,?

# 도화지 제작
page = [[0 for i in range(100)] for i in range(100)]

# 색종이 수
N = int(input())

# N개의 색종이 위치 받기
for i in range(N):
    x, y = map(int, input().split())
    # 색종이 크기만큼 1로 바꿔주기
    for w in range(x, x+10):
        for h in range(y, y+10):
            page[h][w] = 1

# 색칠된 개수 구하기
result = 0
for a in page:
    result += sum(a)

print(result)
